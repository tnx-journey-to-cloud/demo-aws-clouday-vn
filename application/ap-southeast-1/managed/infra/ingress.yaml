apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-public
spec:
  project: cloud-day-demo
  destination:
    namespace: ingress-public
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.1.4
    chart: ingress-nginx
    helm:
      values: |
        controller:
          revisionHistoryLimit: 2
          replicaCount: 2
          minReadySeconds: 20
          ingressClass: nginx
          ingressClassByName: true
          ingressClassResource:
            name: nginx
            enabled: true
            default: true
            controllerValue: "k8s.io/ingress-nginx"
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    topologyKey: kubernetes.io/hostname
          resources:
            requests:
              cpu: 200m
              memory: 300Mi
            limits:
              cpu: 200m
              memory: 300Mi
          config:
            http-snippet: |
              more_clear_headers Server l5d-server-id l5d-remote-ip;
            enable-brotli: "true"
            proxy-next-upstream: error timeout http_502 http_504
            log-format-escape-json: "true"
            log-format-upstream: '{"msec": "$msec","connection": "$connection","connection_requests": "$connection_requests","pid": "$pid","request_id": "$request_id","request_length": "$request_length","remote_addr": "$remote_addr","remote_user": "$remote_user","remote_port": "$remote_port","time_local": "$time_local","time_iso8601": "$time_iso8601","request": "$request","request_uri": "$request_uri","args": "$args","status": "$status","body_bytes_sent": "$body_bytes_sent","bytes_sent": "$bytes_sent","http_referer": "$http_referer","http_user_agent": "$http_user_agent","http_x_forwarded_for": "$http_x_forwarded_for","http_host": "$http_host","server_name": "$server_name","request_time": "$request_time","upstream": "$upstream_addr","upstream_connect_time": "$upstream_connect_time","upstream_header_time": "$upstream_header_time","upstream_response_time": "$upstream_response_time","upstream_response_length": "$upstream_response_length","upstream_cache_status": "$upstream_cache_status","ssl_protocol": "$ssl_protocol","ssl_cipher": "$ssl_cipher","scheme": "$scheme","request_method": "$request_method","server_protocol": "$server_protocol","pipe": "$pipe","gzip_ratio": "$gzip_ratio","http_cf_ray": "$http_cf_ray","geoip_country_code": "$geoip_country_code"}'
            proxy-read-timeout: "120"
            proxy-send-timeout: "120"
            proxy-stream-timeout: "5m"
            proxy-body-size: "100m"
            ssl_ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"
          updateStrategy:
            type: RollingUpdate
            rollingUpdate:
              maxSurge: 20%
              maxUnavailable: 0
          service:
            externalTrafficPolicy: Local
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: nlb
          metrics:
           enabled: true
           serviceMonitor:
             enabled: true
          admissionWebhooks:
            enabled: false