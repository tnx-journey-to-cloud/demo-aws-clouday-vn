# apiVersion: v1
# kind: Namespace
# metadata:
#   name: linkerd
#   annotations:
#     linkerd.io/inject: disabled
#   labels:
#     config.linkerd.io/admission-webhooks: disabled
#     linkerd.io/is-control-plane: "true"
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: linkerd-trust-anchor
#   namespace: linkerd
# spec:
#   secretName: linkerd-trust-anchor
#   duration: 87600h0m0s # 10y
#   issuerRef:
#     name: self-signed
#     kind: ClusterIssuer
#   isCA: true
#   privateKey:
#     algorithm: ECDSA
#   usages:
#     - cert sign
#     - crl sign
#     - server auth
#     - client auth
#   commonName: identity.linkerd.cluster.local
#   dnsNames:
#     - identity.linkerd.cluster.local
# ---
# apiVersion: cert-manager.io/v1
# kind: Issuer
# metadata:
#   name: linkerd-trust-anchor
#   namespace: linkerd
# spec:
#   ca:
#     secretName: linkerd-trust-anchor
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: linkerd-identity-issuer
#   namespace: linkerd
# spec:
#   secretName: linkerd-identity-issuer
#   duration: 2160h0m0s # 90d
#   renewBefore: 360h0m0s # 15d
#   issuerRef:
#     name: linkerd-trust-anchor
#     kind: Issuer
#   isCA: true
#   privateKey:
#     algorithm: ECDSA
#   usages:
#     - cert sign
#     - crl sign
#     - server auth
#     - client auth
#   commonName: identity.linkerd.cluster.local
#   dnsNames:
#     - identity.linkerd.cluster.local
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: linkerd-proxy-injector
#   namespace: linkerd
# spec:
#   secretName: linkerd-proxy-injector-k8s-tls
#   duration: 2160h0m0s # 90d
#   renewBefore: 360h0m0s # 15d
#   issuerRef:
#     name: linkerd-trust-anchor
#     kind: Issuer
#   privateKey:
#     algorithm: ECDSA
#   usages:
#     - server auth
#     - client auth
#   commonName: linkerd-proxy-injector.linkerd.svc
#   dnsNames:
#     - linkerd-proxy-injector.linkerd.svc
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: linkerd-sp-validator
#   namespace: linkerd
# spec:
#   secretName: linkerd-sp-validator-k8s-tls
#   duration: 2160h0m0s # 90d
#   renewBefore: 360h0m0s # 15d
#   issuerRef:
#     name: linkerd-trust-anchor
#     kind: Issuer
#   privateKey:
#     algorithm: ECDSA
#   usages:
#     - server auth
#     - client auth
#   commonName: linkerd-sp-validator.linkerd.svc
#   dnsNames:
#     - linkerd-sp-validator.linkerd.svc
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: linkerd-policy-validator
#   namespace: linkerd
# spec:
#   secretName: linkerd-policy-validator-k8s-tls
#   duration: 2160h0m0s # 90d
#   renewBefore: 360h0m0s # 15d
#   issuerRef:
#     name: linkerd-trust-anchor
#     kind: Issuer
#   privateKey:
#     algorithm: ECDSA
#   usages:
#     - server auth
#     - client auth
#   commonName: linkerd-policy-validator.linkerd.svc
#   dnsNames:
#     - linkerd-policy-validator.linkerd.svc
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: linkerd-tap
#   namespace: linkerd
# spec:
#   secretName: tap-k8s-tls
#   duration: 2160h0m0s # 90d
#   renewBefore: 360h0m0s # 15d
#   issuerRef:
#     name: linkerd-trust-anchor
#     kind: Issuer
#   privateKey:
#     algorithm: ECDSA
#   usages:
#     - server auth
#     - client auth
#   commonName: tap.linkerd.svc
#   dnsNames:
#     - tap.linkerd.svc
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: linkerd-tap-injector
#   namespace: linkerd
# spec:
#   secretName: tap-injector-k8s-tls
#   duration: 2160h0m0s # 90d
#   renewBefore: 360h0m0s # 15d
#   issuerRef:
#     name: linkerd-trust-anchor
#     kind: Issuer
#   privateKey:
#     algorithm: ECDSA
#   usages:
#     - server auth
#     - client auth
#   commonName: tap-injector.linkerd.svc
#   dnsNames:
#     - tap-injector.linkerd.svc
# ---
# # kind: Ingress
# # apiVersion: networking.k8s.io/v1beta1
# # metadata:
# #   name: linkerd-dashboard
# #   namespace: linkerd
# #   annotations:
# #     nginx.ingress.kubernetes.io/configuration-snippet: |
# #       proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
# #       proxy_set_header Origin "";
# #     nginx.ingress.kubernetes.io/upstream-vhost: $service_name.$namespace.svc.cluster.local
# #     kubernetes.io/ingress.class: nginx-internal
# #     kubernetes.io/tls-acme: "true"
# # spec:
# #   rules:
# #     - host: linkerd.monitoring.jarvistrunk.net
# #       http:
# #         paths:
# #           - path: /
# #             backend:
# #               serviceName: web
# #               servicePort: 8084
# #   tls:
# #     - secretName: dashboard-tls
# #       hosts:
# #         - linkerd.monitoring.jarvistrunk.net
